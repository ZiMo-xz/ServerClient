# MultiThreadedServer

这个项目实现了一个多线程的网络服务器，使用了 pthread 库来创建和管理线程，并且支持多个客户端的同时连接。

## 服务器 (Server)

服务器端包含一个 `server.cpp` 文件，用于创建多线程服务器。该服务器会监听指定端口（默认为 8080），并在收到客户端连接请求后创建一个新的线程来处理客户端请求。服务器会将客户端发送的消息存储到名为 `messages.txt` 的文件中，并向客户端发送相同的消息作为响应。

### 多线程处理客户端请求

服务器使用了线程锁和条件变量来处理多个客户端的请求。具体来说，服务器在一个队列中维护客户端套接字，当有客户端连接时，会将其套接字加入队列，并通过条件变量唤醒等待的线程来处理客户端请求。线程会从队列中取出套接字进行处理，并在处理完成后关闭连接。

这种方式确保了多个线程之间的互斥访问，避免了竞态条件和数据不一致性问题，同时也提高了服务器的并发处理能力。

## 客户端 (Client)

客户端包含一个 `client.cpp` 文件，用于连接到服务器并发送消息。你可以使用单个客户端或多个客户端连接到服务器进行通信。

## 多客户端 (MultClient)

多客户端版本包含一个 `MultClient.cpp` 文件，它与单个客户端相似，但可以启动多个客户端实例。这个版本用于测试服务器在多个客户端连接情况下的性能和稳定性。
